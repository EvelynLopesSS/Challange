    def extract_search_results(self):
        try:
            # Extracting search results
            articles = self.driver.find_elements(By.XPATH, '//article[@class="gc u-clickable-card gc--type-customsearch#result gc--list gc--with-image"]')
            
            for article in articles:
                title_element = article.find_element(By.XPATH, './/h3[@class="gc__title"]/a')
                title = title_element.text
                url = title_element.get_attribute('href')

                image_element = article.find_element(By.XPATH, './/div[@class="gc__image-wrap"]/div[@class="article-card__image-wrap"]/img')
                image_src = image_element.get_attribute('src')

                print(f'Title: {title}')
                print(f'URL: {url}')
                print(f'Image Source: {image_src}')
                print('-' * 80)
        except Exception as e:
            print(f'Error extracting search results: {e}')


    def load_all_articles(self):
        total_results = self.get_total_results()
        if total_results == 0:
            print("Unable to determine the total number of results.")
            return
        
        # Calcular o número de cliques necessários
        clicks_needed = math.ceil(total_results / 10)
        articles_loaded = 0
        
        for _ in range(clicks_needed):
            try:
                # Verificar se o botão de "Show more" está visível e clicável
                show_more_button = self.wait_for_xpath_element('//button[@class="show-more-button grid-full-width"]', timeout=5)
                self.click_element(show_more_button)
                articles_loaded += 10  # Incrementa o número de artigos carregados
                time.sleep(2)  # Aguardar a carga de mais artigos
            except Exception as e:
                # Se não for possível encontrar o botão, isso pode significar que todos os artigos foram carregados
                print(f'No more articles to load or error: {e}')
                break